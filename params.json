{"name":"Express-orm-mvc","tagline":"Express + ORM MVC","body":"[Express](https://github.com/visionmedia/express) + [ORM](https://github.com/dresende/node-orm2) MVC\r\n===============\r\nAs everyone the 1st time I start to use express, there was many problem i have to solve as\r\n\r\n* Database\r\n* App structure\r\n* Router\r\n* Separate modules\r\n* ...\r\n\r\nSo hope this library help someone like me.\r\n\r\nAny ideas are appreciated.\r\n\r\n##Features\r\n\r\n* MVC\r\n* This library just help you to structure your code and scale up later\r\n* No Express or ORM hack\r\n* Config Express and ORM by yourself (Fully control)\r\n\r\n##Installation\r\n\r\n\tnpm install express-orm-mvc --save\r\n\t\r\n##App structure\r\n\r\n\t/\r\n\t\tmodels/\t\t\t\t\t\t-- all of your models here\r\n\t\tcontrollers/\t\t\t\t-- all of your controllers here\r\n\t\tviews/\r\n\t\tconfig/\r\n\t\t\texpress.js\t\t\t\t-- your express config\r\n\t\t\torm.js\t\t\t\t\t-- your orm config\r\n\t\t\troutes.js\t\t\t\t-- router\r\n\t\t\tsettings.js\t\t\t\t-- app settings (ip, port, database, ...)\r\n\t\tapp.js\t\t\t\t\t\t-- root\r\n\t\t\r\nPlease check [example](example) folder\r\n\r\n##How to use\r\n\r\nPlease check [example](example) folder or follow these document\r\n\r\n###Init\r\n\r\n```js\r\nrequire(express-orm-mvc)({\r\n\tpath: __dirname\r\n}, function(err){\r\n\tif(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn;\r\n\t}\r\n\tconsole.log('done');\r\n});\r\n```\r\n\r\n###Models\r\n\r\nA model file should be like this\r\n\r\n```js\r\nmodule.exports = function (orm, db) {\r\n    //define your orm model here\r\n};\t\r\n```\r\n\r\nExample:\r\n\r\n\tmodels/post.js\r\n\t\r\n```js\r\nmodule.exports = function (orm, db) {\r\n\tvar Post = db.define('post', {\r\n\t\ttitle:      { type: 'text' },\r\n\t\tcontent:    { type: 'text' }\r\n    });\r\n};\r\n```\r\n\r\nCheck ORM document [Defining Models](https://github.com/dresende/node-orm2/wiki/Defining-Models)\r\n\r\n###Controllers\r\n\r\nA controller file should be like this\r\n\r\n```js\r\nmodule.exports = {\r\n    //define your controller here\r\n};\r\n```\r\n\r\nExample:\r\n\r\n\tcontrollers/post.js\r\n\t\r\n```js\r\nmodule.exports = {\r\n\thome: function(req, res, next){\r\n\t\tres.send('home page');\r\n\t},\r\n    get: function(req, res, next) {\r\n        req.models.post.find(function(err, data) {\r\n            res.send(data);\r\n        });\r\n    },\r\n    create: function(req, res, next) {\r\n        req.models.post.create({\r\n            title: 'title',\r\n            content: 'content'\r\n        }, function(err, result) {\r\n            res.send(result);\r\n        });\r\n    }\r\n};\r\n```\r\n**Note:** you can list all of your models in req.models\r\n\r\n###Settings\r\n\r\n\tconfig/settings.js\r\n\t\r\nA settings file should be like this\r\n\r\n```js\r\nmodule.exports = {\r\n    mode1: { //development\r\n        ip: <ip>,\r\n        port: <port>,\r\n        db: // orm database setting object\r\n    },\r\n    mode2: { //production\r\n        ip: <ip>,\r\n        port: <port>,\r\n        db: // orm database setting object\r\n    }\r\n};\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nmodule.exports = {\r\n    development: {\r\n        ip: '127.0.0.1',\r\n        port: 8080,\r\n        db: {\r\n            host: '127.0.0.1',\r\n            port: 3306,\r\n            protocol: 'mysql',\r\n            user: 'root',\r\n            password: '123456789',\r\n            database: 'express-orm-mvc-test',\r\n            connectionLimit: 100\r\n        }\r\n    },\r\n    production: {\r\n        ip: '127.0.0.1',\r\n        port: 8080,\r\n        db: {\r\n            host: '127.0.0.1',\r\n            port: 3306,\r\n            protocol: 'mysql',\r\n            user: 'root',\r\n            password: '123456789',\r\n            database: 'express-orm-mvc-test',\r\n            connectionLimit: 100\r\n        }\r\n    }\r\n};\r\n```\r\n\r\n**Note**: You should set your NODE_ENV variable (development or production), or you can by pass by send directly the mode option when init, check [here](#init-with-options)\r\n\r\nCheck ORM document [Connecting to Database](https://github.com/dresende/node-orm2/wiki/Connecting-to-Database)\r\n\r\n###Express config\r\n\t\r\n\tconfig/express.js\r\n\t\r\nA express config file should be like this\r\n\r\n```js\r\nmodule.exports = function(app) {\r\n    //any express config here\r\n};\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nmodule.exports = function(app) {\r\n    app.set('title', 'testing');    \t\r\n    app.set('views', '../views');\r\n\tapp.set('view engine', 'ejs');\r\n    app.use(express.favicon());\r\n};\r\n```\r\n\r\nCheck Express document [api](http://expressjs.com/api.html)\r\n\r\n**Note**:\r\n\r\n* As you see there is no ```views``` folder in app structure, so create and manage by yourself\r\n* Library will start a server automatically, so no need this kind of this stuff\r\n\r\n```js\r\nhttp.createServer(app).listen(function(){});\r\n```\r\n\r\n###ORM config\r\n\r\n\tconfig/orm.js\r\n\t\r\nA orm config file should be like this\r\n\r\n```js\r\nmodule.exports = function(orm, db) {\r\n    //any orm config here\r\n};\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nmodule.exports = function(orm, db) {\r\n    db.settings.set('test', 'testing data');\r\n};\r\n```\r\n\r\nCheck ORM document [Settings](https://github.com/dresende/node-orm2/wiki/Settings)\r\n\r\n**Note**: Library will [sync database](https://github.com/dresende/node-orm2/wiki/Synching-and-Dropping-Models#wiki-synching) automatically.\r\n\r\n###Routes config\r\n\r\n\tconfig/routes.js\r\n\t\r\nA routes config file should be like this\r\n\r\n```js\r\nmodule.exports = function(app, controllers) {\r\n\t//routes here\r\n};\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nmodule.exports = function(app, controllers) {\r\n    app.get(    '/'       , controllers.post.home);\r\n    app.get(    '/post'   , controllers.post.get);\r\n    app.post(   '/post'   , controllers.post.create);\r\n};\r\n```\r\n\r\n##Init with options\r\n\r\n```js\r\nrequire(express-orm-mvc)({\r\n\tmode: 'development' //default: production\r\n\tpath: __dirname\r\n}, callback);\r\n```\r\n\r\n##Todo\r\n\r\n* Caller dirname","google":"UA-24951846-12","note":"Don't delete this file! It's used internally to help with page regeneration."}